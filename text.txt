1 задача(анализ предм. обл):





На данном этапе курсовой работы я провел анализ предметной области.

Сначала я исследовал традиционные методы, такие как бумажные журналы и таблицы, которые до сих пор используются в некоторых школах. Однако, эти методы имеют множество недостатков, таких как высокая вероятность ошибок при ручном вводе данных и сложность в обработке информации, надежность данных, сложность передачи информации. Я также рассмотрел современные электронные системы, такие как электронные дневники и специализированные программы, которые значительно упрощают процесс учета успеваемости.

У учителей есть необходимость удобного ввода и редактирования оценок, а также доступа к отчетам о успеваемости и аналитике данных.
Ученикам нужно иметь возможность отслеживать свою успеваемость в режиме реального времени.
Администраторы должны иметь контроль над учителями.

В результате анализа я выявил ключевые проблемы, которые могут быть решены с помощью базы данных. 
Во-первых, традиционные методы учета успеваемости часто оказываются неэффективными и трудоемкими. 
Во-вторых, ошибки при ручном вводе данных могут привести к недостоверной информации. 
В-третьих, Сложность передачи информации, табелей.

Таким образом, разработка базы данных для контроля успеваемости школьников позволит решить эти проблемы и значительно улучшить процесс учета успеваемости.






2 задача (Спроектировать структуру базы данных)







Таблица "Admins" (Администраторы) Назначение: Хранит информацию о администраторах системы, которые имеют доступ к управлению базой данных.

Таблица "Classes" (Классы) Назначение: Содержит информацию о классах, в которых обучаются ученики.

Таблица "Teachers" (Учителя) Назначение: Хранит данные о преподавателях, которые ведут занятия в классах.

Таблица "Students" (Ученики) Назначение: Содержит информацию о учениках, их классах и учебной истории.

Таблица "Subjects" (Предметы) Назначение: Хранит информацию о предметах, которые изучаются в школе.

Таблица "Teacher_Subject" (Учитель_Предмет) Назначение: Связывает учителей с предметами, которые они ведут.

Таблица "Teacher_Classes" (Учитель_Класс) Назначение: Связывает учителей с классами, которые они ведут.

Таблица "Grades" (Оценки) Назначение: Хранит информацию об оценках, выставленных ученикам по предметам.

Представление "student_grades" Назначение: Объединяет данные из таблиц "Grades", "Students", "Subjects" и "Classes" для получения полной информации об оценках учеников.
Польза: Это представление позволяет учителям и администраторам быстро получать сводную информацию о успеваемости учеников по всем предметам и классам, что упрощает анализ успеваемости и подготовку отчетов.

Представление "Teacher_Classes_View" Назначение: Объединяет данные из таблиц "Teacher_Classes" и "Classes" для получения информации о классах, которые ведет каждый учитель.
Польза: Это представление позволяет учителям и администраторам быстро видеть, какие классы ведет каждый учитель, что упрощает управление расписанием и распределение нагрузки между преподавателями.






3 задача (Выбрать и обосновать систему управления базами данных (СУБД))





При выборе системы управления базами данных я остановился на PostgreSQL.

Из плюсов,

Во-первых, надежность и стабильность. PostgreSQL зарекомендовал себя как одна из самых надежных СУБД на рынке. Она используется многими крупными компаниями и организациями, что подтверждает ее способность обрабатывать критически важные данные без сбоев.

Во-вторых, поддержка сложных запросов. PostgreSQL предлагает мощные возможности для работы с SQL, включая поддержку подзапросов, объединений и оконных функций. Это особенно важно для нашего проекта, так как методов аналитики успеваемости учеников бескрайнее количество.

Третьим важным аспектом является расширяемость. PostgreSQL позволяет создавать собственные типы данных, функции и операторы. Это дает нам возможность адаптировать базу данных под специфические требования нашего проекта, что является значительным преимуществом.

Также стоит отметить поддержку транзакций. PostgreSQL полностью поддерживает ACID-транзакции, что обеспечивает целостность данных. Это критически важно в образовательной среде, где ошибки могут привести к серьезным последствиям.

Однако, как и у любой технологии, у PostgreSQL есть и свои недостатки. Например, сложность настройки. Для новичков администрирование и настройка PostgreSQL могут показаться сложными.

Наконец, требования к ресурсам. PostgreSQL может требовать больше ресурсов по сравнению с более легковесными СУБД. 

В целом, преимущества PostgreSQL перевешивают его недостатки, и это делает его отличным выбором для нашего проекта по разработке базы данных для контроля успеваемости школьников.



4 задача (Реализовать структуру базы данных)




Я расскажу о процессе реализации структуры базы данных.

Первым шагом было создание таблиц. Вы видели их ранее. Каждая таблица была создана с учетом необходимых атрибутов и ограничений целостности. Например, в таблице Ученики я включил поля для имени, фамилии, даты рождения и класса, а также установили ограничения, чтобы гарантировать, что дата рождения всегда будет меньше текущей даты.

Следующим этапом стало установление связей между таблицами.

Для повышения производительности также провел оптимизацию структуры. Создание индексов на часто запрашиваемые поля, такие как логины учеников и учителей. Применил ограничения CHECK, чтобы контролировать корректность вводимых данных. Например, в таблице Оценки установил, что оценка может принимать только значения от 2 до 5.

Наконец, реализовал представления для удобного доступа к данным.

Также были реализованы 2 функции для добавления и изменения оценок. Можно было здесь производить валидацию данных, но я решил сделать это на уровне приложения.





5 задача (Разработать и протестировать приложение)





Я разработал приложение для управления оценками школьников с использованием библиотеки Tkinter для создания графического интерфейса и библиотеки psycopg2 для взаимодействия с базой данных PostgreSQL. 

Основные функции приложения:

1) Авторизация пользователей:

Приложение предоставляет интерфейс для авторизации, где пользователи могут войти в систему, указав свой логин и пароль. В зависимости от роли пользователя (ученик, учитель или администратор) интерфейс будет изменяться, предоставляя доступ к соответствующим функциям.

2) Ученики могут просматривать свои оценки по предметам за определенные периоды, просматривать итоговые оценки за учебный год. Хранятся все оценки, за все время обучения. 
3) Учителя могут выставлять, изменять и удалять оценки. Реализованы системы валидации ввода данных, учителя могут изменять оценки только у тех классов, в которых они преподают, и только те предметы которые они преподают. А еще лучше им просто не даст выбрать не того ученика, выдаются только те которых можно редактировать, а если у ученика за это время нет оценок то вылезет соответсвующее сообщение.

Также учителя могут выводить табель оценок учеников в классе, по опредленному предмету. Или же посмотреть какие выходят итоговые иценки и по каким предметам и у кого.

Или же сравнить успеваемость учеников в разные периоды времени

5) Управление учителями и классами для администраторов. Администраторы могут добавлять и удалять учителей, а также управлять предметами и классами, которые ведут учителя. Для этого предусмотрены отдельные интерфейсы, где администратор может вводить данные о новом учителе или выбирать существующего для удаления.

Проверки на правильность ввода данных

При авторизации проверяется, заполнены ли поля логина и пароля.
При добавлении оценок проверяется, что все поля заполнены, а также что номер урока находится в допустимом диапазоне.
При выборе предметов и классов проверяется, что пользователь действительно выбрал элемент из выпадающего списка.





6 задача (тестирование)




Тестирование структуры базы данных. Я проверил, что все таблицы были созданы корректно, и установленные связи между ними работают как задумано. Это включало в себя проверку всех ограничений целостности, таких как первичные и внешние ключи, а также ограничения CHECK.


После проверил все функции, такие как добавление, изменение и удаление оценок, а также просмотр успеваемости. В процессе тестирования мы также убедились, что все проверки на правильность ввода данных работают корректно. Например, если пользователь пытается добавить оценку с некорректным номером урока, приложение выдает соответствующее сообщение об ошибке.

На каждой странице можно вернуться назад, или вообще выйти и зайти под другим пользователем